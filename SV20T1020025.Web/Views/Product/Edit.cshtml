@model SV20T1020025.Web.Models.ProductDetails
@{
    
}

<div class="box box-primary">

    <div class="box-header with-border ">
        <h3 class="box-title">Thông tin mặt hàng</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>

    <div class="box-body">
        <form class="form-horizontal" action="~/Product/Save" method="post" enctype="multipart/form-data">

            <input type="hidden" name="@nameof(Model.data.ProductID)" value="@Model.data.ProductID" />
            <div class="form-group">
                <label class="control-label col-sm-2">Tên mặt hàng:</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" autofocus name="@nameof(Model.data.ProductName)"
                           value="@Model.data.ProductName" />
                    @Html.ValidationMessage(nameof(Model.data.ProductName), new { @style = "color:#f00" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-sm-2">Mô tả:</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="@nameof(Model.data.ProductDescription)"
                           value="@Model.data.ProductDescription" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Loại hàng:</label>
                <div class="col-sm-10">
                    <select class="form-control" name="@nameof(Model.data.CategoryID)">
                        <option value="0">-- Loại hàng --</option>
                        @foreach (var item in SV20T1020025.BusinessLayers.CommonDataService.ListOfCategories(out int rowCount))
                        {
                            if (item.CategoryID == Model.data.CategoryID)
                            {
                                <option value="@item.CategoryID" selected>@item.CategoryName</option>
                            }
                            else
                            {
                                <option value="@item.CategoryID">@item.CategoryName</option>
                            }
                        }
                    </select>
                    @Html.ValidationMessage(nameof(Model.data.CategoryID), new { @style = "color:#f00" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-sm-2">Nhà cung cấp:</label>
                <div class="col-sm-10">
                    <select class="form-control" name="@nameof(Model.data.SupplierID)">
                        <option value="0">-- Nhà cung cấp --</option>
                        @foreach (var item in SV20T1020025.BusinessLayers.CommonDataService.ListOfSuppliers(out int rowCount))
                        {
                            if (item.SupplierID == Model.data.SupplierID)
                            {
                                <option value="@item.SupplierID" selected>@item.SupplierName</option>
                            }
                            else
                            {
                                <option value="@item.SupplierID">@item.SupplierName</option>
                            }
                        }
                    </select>
                    @Html.ValidationMessage(nameof(Model.data.SupplierID), new { @style = "color:#f00" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-sm-2">Đơn vị tính:</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="@nameof(Model.data.Unit)" value="@Model.data.Unit">
                    @* @Html.TextBoxFor(m => m.data.Unit, new { @class = "form-control", @autofocus = "autofocus" }) *@
                    @Html.ValidationMessage(nameof(Model.data.Unit), new { @style = "color:#f00" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Giá hàng:</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="@nameof(Model.data.Price)" value="@Model.data.Price.ToString("N0")">
                    @* @Html.TextBoxFor(m => m.data.Price, new { @class = "form-control", @autofocus = "autofocus" }) *@
                    @Html.ValidationMessage(nameof(Model.data.Price), new { @style = "color:#f00" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-lg-offset-2 col-sm-10">
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" name="@nameof(Model.data.IsSelling)" value="true" @(Model.data.IsSelling ? "checked" : "") />
                            Hiện đang được bán
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Ảnh minh họa:</label>
                <div class="col-sm-10">
                    <input type="hidden" name="@nameof(Model.data.Photo)" value="@Model.data.Photo" />
                    <input type="file" class="form-control" name="uploadPhoto" accept="image/*"
                           onchange="document.getElementById('Photo').src = window.URL.createObjectURL(this.files[0])" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-lg-offset-2 col-sm-10">

                    <img id="Photo" src="~/images/products/@Model.data.Photo" class="img img-bordered" style="width:200px" />
                    @Html.ValidationMessage(nameof(Model.data.Photo), new { @style = "color:#f00" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-save"></i> Lưu dữ liệu
                    </button>
                    <a class="btn btn-default" href="~/Product">
                        Quay lại
                    </a>
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-offset-2 col-sm-10">
                    @Html.ValidationMessage("Error", new { @style = "color: #f00" })
                </div>

            </div>
        </form>

    </div>

</div>

@if (ViewBag.IsEdit != null && (bool)ViewBag.IsEdit)
{
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Thư viện ảnh</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <table class="table table-bordered table-hover table-striped">
                <thead>
                    <tr class="bg-gray">
                        <th>Ảnh</th>
                        <th>Mô tả/tiêu đề</th>
                        <th>Thứ tự hiển thị</th>
                        <th>Ẩn ảnh</th>
                        <th class="text-right">
                            <a class="btn btn-xs btn-primary" href="~/Product/Photo/@Model.data.ProductID?method=add">
                                <i class="fa fa-plus"></i>
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var sortedPhotos = Model.productPhotos.OrderBy(p => p.DisplayOrder).ToList();
                        var usedDisplayOrders = new HashSet<int>();
                    }

                    @foreach (var item in sortedPhotos)
                    {
                        var displayOrder = item.DisplayOrder;
                        // Nếu thứ tự hiển thị của phần tử đã tồn tại trong bảng
                        if (usedDisplayOrders.Contains(displayOrder))
                        {
                            // Tăng thứ tự hiển thị cho đến khi không trùng lặp với các phần tử khác
                            while (usedDisplayOrders.Contains(displayOrder))
                            {
                                displayOrder++;
                            }
                        }
                        usedDisplayOrders.Add(displayOrder); // Thêm thứ tự hiển thị vào HashSet

                        <tr>
                            <td style="vertical-align:middle">
                                <img src="~/images/products/@item.Photo" alt="MacBookPro" style="width:100px" />
                            </td>
                            <td style="vertical-align:middle;">
                                @item.Description
                            </td>
                            <td style="vertical-align:middle;">@displayOrder</td>
                            <td style="vertical-align:middle;">@(item.IsHidden ? "Có" : "")</td>
                            <td style="vertical-align:middle; text-align:right">
                                <a class="btn btn-xs btn-primary" href="~/Product/Photo/@item.ProductID?method=edit&photoId=@item.PhotoID">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a class="btn btn-xs btn-danger" href="~/Product/Photo/@item.ProductID?method=delete&photoId=@item.PhotoID">
                                    <i class="fa fa-remove"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>




    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Thuộc tính của mặt hàng</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>

        <div class="box-body">
            <table class="table table-bordered table-hover table-striped">
                <thead>
                    <tr class="bg-gray">
                        <th>Tên thuộc tính</th>
                        <th>Giá trị thuộc tính</th>
                        <th>Thứ tự hiển thị</th>
                        <th class="text-right">
                            <a class="btn btn-xs btn-primary" href="~/Product/Attribute/@Model.data.ProductID?method=add">
                                <i class="fa fa-plus"></i>
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var sortedAttributes = Model.productAttributes.OrderBy(p => p.DisplayOrder).ToList();
                        int editedAttributeID = 0;
                        int newDisplayOrder = 0; // Khai báo biến newDisplayOrder và gán giá trị mặc định
                    }

                    @foreach (var item in sortedAttributes)
                    {
                        var displayOrder = item.DisplayOrder;
                        if (item.AttributeID == editedAttributeID) // Nếu phần tử này là phần tử bị chỉnh sửa
                        {
                            newDisplayOrder = item.DisplayOrder; // Cập nhật giá trị mới cho newDisplayOrder
                            displayOrder = newDisplayOrder; // Sử dụng thứ tự mới mà bạn đã chọn khi chỉnh sửa
                        }
                        else
                        {
                            while (usedDisplayOrders.Contains(displayOrder))
                            {
                                displayOrder++; // Tăng thứ tự hiển thị lên một nếu đã sử dụng
                            }
                        }
                        usedDisplayOrders.Add(displayOrder); // Thêm thứ tự hiển thị vào HashSet

                        <tr>
                            <td style="vertical-align:middle">@item.AttributeName</td>
                            <td style="vertical-align:middle;">@item.AttributeValue</td>
                            <td style="vertical-align:middle;">@displayOrder</td>
                            <td style="vertical-align:middle; text-align:right">
                                <a class="btn btn-xs btn-primary" href="~/Product/Attribute/@item.ProductID?method=edit&attributeID=@item.AttributeID">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a class="btn btn-xs btn-danger" href="~/Product/Attribute/@item.ProductID?method=delete&attributeID=@item.AttributeID">
                                    <i class="fa fa-remove"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="box-footer text-center">
        </div>
    </div>

}
